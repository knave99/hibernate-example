package com.cloudshaped.generated;

// Generated 08-Jul-2012 17:47:20 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Service generated by hbm2java
 */
@Entity
@Table(name = "service", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Service implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5917822840819637862L;
	private long id;
	private String name;
	private Boolean isFree;
	private Set<Product> products = new HashSet<Product>(0);
	private Set<Channel> channels = new HashSet<Channel>(0);

	public Service() {
	}

	public Service(long id) {
		this.id = id;
	}

	public Service(long id, String name, Boolean isFree,
			Set<Product> products, Set<Channel> channels) {
		this.id = id;
		this.name = name;
		this.isFree = isFree;
		this.products = products;
		this.channels = channels;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "name", unique = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "\"isFree\"")
	public Boolean isFree() {
		return this.isFree;
	}

	public void setFree(Boolean isFree) {
		this.isFree = isFree;
	}

	@ManyToMany ( cascade = CascadeType.ALL )
	@JoinTable (name="productservice", joinColumns = { @JoinColumn (name="service_id") }, 
				inverseJoinColumns = { @JoinColumn (name="product_id") }
				)  
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "service")
	public Set<Channel> getChannels() {
		return this.channels;
	}

	public void setChannels(Set<Channel> channels) {
		this.channels = channels;
	}

}
